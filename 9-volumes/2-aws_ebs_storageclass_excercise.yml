
# Make sure you create a single node for this excercise other wise EBS will end up creating in another AZ's
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: aws-storage-class
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: kubernetes.io/aws-ebs
parameters:
  type: io1
  iopsPerGB: "10"
  fsType: ext4
allowVolumeExpansion: true
reclaimPolicy: Retain   # Retain/Delete 
volumeBindingMode: Immediate

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ebs-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: aws-storage-class
  resources:
    requests:
      storage: 8Gi

# Create a single pod and login to container with "kubectl exec -it dynamic-pv-pod -- /bin/bash" add some files or folder in /opt/mount/
---
apiVersion: v1
kind: Pod
metadata:
  name: dynamic-pv-pod
spec:
  volumes:
    - name: dynamic-pv-storage
      persistentVolumeClaim:
        claimName: ebs-pv-claim
  containers:
    - name: task-pv-container
      image: nginx
      ports:
        - containerPort: 80
          name: "http-server"
      resources: 
        requests:  
          memory: "256Mi"
          cpu: "250m"      
        limits:
          memory: "500Mi"
          cpu: "400m"
      volumeMounts:
        - mountPath: "/opt/mount/"
          name: dynamic-pv-storage

# Now Create a new pod or deployment with below manifest and check file created in above pod will be available at /home/apache-tomcat-8.5.77/logs 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-app
  template:
    metadata:
      labels:
        app: sample-app
    spec:
      containers:
      - name: sample-app
        image: ramcloud/sample-app:v2
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8080
        volumeMounts:
          - mountPath: "/home/apache-tomcat-8.5.77/logs"
            name: dynamic-pv-storage
      volumes:
      - name: dynamic-pv-storage
        persistentVolumeClaim:
          claimName: ebs-pv-claim

---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: gp2
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
  fsType: ext4 
reclaimPolicy: Retain  # Retain/Delete
volumeBindingMode: Immediate
allowVolumeExpansion: true

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ebs-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 8Gi

# Please delete the volume in AWS EBS console, In case if you haven't used "reclaimPolicy: Delete"
